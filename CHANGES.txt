Changes to Proxool
----------------

$Revision: 1.8 $
$Date: 2002/12/03 10:54:28 $
$Author: billhorsman $

0.5 (scheduled for November 22, 2002)

- Fix finalisation of old instances. If you deploy to some environments in
  a certain way then it is possible for the class to be reloaded without the
  finalize() method being called. This will result in spurious house keeping
  threads remaining. The new ReloadMonitor avoids this.

- Various improvements to the logging to make it more informative and
  cleaner.

- Checkstyle improvements. We now enforce variable names and line length.
  Javadoc enforcement to come soon.

- Made the onBirth() method of ConnectionListenerIF interface failsafe. And
  removed obsolete cleanupClob() method (which was never called anyway)..

- Removed redundant logFilename stuff from ConnectionPoolDefinition. All
  logging is handled by Jakarta Commons's Logging anyway.

- Fix when removing pools that meant that when you tried to add them again
  Proxool thought it was a duplicate (credit to Dan Milstein).

- Improvements to the way Proxool detects changes to the pool definition
  when resending the Properties object when you get a connection. Now
  detects when it has changed which means that we don't do
  unnecessary configuration and log is improved (we now log properties
  as they are set or updated).

- Fix to the ProxyConnection within the equals() method that was causing
  identical conections to be incorrectly reported as unequals (which leads to
  problems when adding them to some collections).

- Improvements to test classes. Lots more tests.

- Added support for resetting connection properties when it is returned to
  the pool (autoCommit, catalog, readOnly, transactionIsolation, typeMap
  and holdability). These  properties are reset to the values when the connection
  was made everytime it is returned. (credit to Tim Morley)

- Connection.isClosed() now returns true when it is back in the pool.

- New trace property allows you to log each execution, the SQL, the parameters
  used, and the execution time (DEBUG level). Use proxool.trace=true property.
  You can also get this information if you register a ConnectionListenerIF (use
  ProxoolFacade's setConnectionListener() method). This won't effect performance
  if you're not listening or have trace off.

- Prototyping is now off by default. To enable prototyping you need to set the
  proxool.prototype-count property to something sensible (like 5, for instance).
  [Prototyping is where spare connections are when the number of available
  connections approaches zero.]

0.4 - September 19, 2002

- Rethink of how we organise our source code so that we can easily build
  to include different optional components.

- Use the Jakarta Commons' ultra-thin log wrapper. This allows you to
  plugin whatever logging component you like.

- Switched to use of the Proxy class so that we are not tied to a particular
  version of the JDK. However, this does mean a bit of patching to work with
  JDK 1.2 (Proxy was introduced in 1.3). Fortunately, this patch is handled
  easily using Ant.

- Test classes now make use of Hypersonic. A pure Java database with a very
  small footprint. This means we can run the tests without having to rely on
  the existence of a separate database.

- Layout and code style changes in accordance with CheckStyle

- New XMLConfigurator using JAXP to configure your connection pools.

- Improvments in Junit testing.

