alias=\
The name used to uniquely identify the pool to Proxool.

driver-url=\
The delegate JDBC driver class.

driver-properties=\
A set of comma separated propeties that are passed to the delegate driver. \
Example: user=foo, password=bar.

fatal-sql-exception=\
All SQLExceptions are caught and tested for containing this text fragment. \
If it matches than this connection is considered useless and it is discarded. \
Regardless of what happens the exception is always thrown again. This property behaves like a collection; \
you can set it more than once and each value is checked.

house-keeping-sleep-time=\
How long the house keeping thread sleeps for (milliseconds). \
The house keeper is responsible for checking the state of all the connections and tests whether any need to be \
destroyed or created. Default is 30 seconds.

house-keeping-test-sql=\
If the house keeping thread finds and idle connections it will test them \
with this SQL statement. It should be _very_ quick to execute. Something like checking the current date or something. \
If not defined then this test is omitted.

maximum-active-time=\
If the housekeeper comes across a thread that has been active for longer than \
this then it will kill it. So make sure you set this to a number bigger than your slowest expected response! \
Default is 5 minutes.

maximum-connection-count=\
The maximum number of connections to the database. Default is 15.

maximum-connection-lifetime=\
The maximum amount of time that a connection exists for before it is \
killed (milliseconds). Default is 4 hours.

maximum-new-connections=\
This is the maximum number of connections we can be building at any \
one time. That is, the number of new connections that have been requested but aren't yet available for use. \
Because connections can be built using more than one thread (for instance, when they are built on demand) and it \
takes a finite time between deciding to build the connection and it becoming available we need some way of ensuring \
that a lot of threads don't all decide to build a connection at once. (We could solve this in a smarter way - and \
indeed we will one day) Default is 10.

simultaneous-build-throttle=\
This is the maximum number of connections we can be building at any \
one time. That is, the number of new connections that have been requested but aren't yet available for use. \
Because connections can be built using more than one thread (for instance, when they are built on demand) and it \
takes a finite time between deciding to build the connection and it becoming available we need some way of ensuring \
that a lot of threads don't all decide to build a connection at once. (We could solve this in a smarter way - and \
indeed we will one day) Default is 10.

minimum-connection-count=\
The minimum number of connections we will keep open, regardless of \
whether anyone needs them or not. Default is 5.

overload-without-refusal-lifetime=\
This helps us determine the pool status. If we have refused a \
connection within this threshold (milliseconds) then we are overloaded. Default is 60 seconds.

recently-started-threshold=\
This helps us determine whether the pool status is up, down or \
overloaded. As long as at least one connection was started within this threshold (milliseconds) or there are some \
spare connections available then we assume the pool is up. Default is 60 seconds.

trace=\
If true then each SQL call gets logged (DEBUG level) along with the execution time. \
You can also get this information by registering a ConnectionListener (see ProxoolFacade). Default is false.

verbose=\
Either false (quiet) or true (loud). Default is false.

prototype-count=\
If there are fewer than this number of connections available then we will \
build some more (assuming the maximum-connection-count is not exceeded). For example. Of we have 3 active \
connections and 2 available, but our prototype-count is 4 then it will attempt to build another 2. \
This differs from minimum-connection-count because it takes into account the number of active connections. \
minimum-connection-count is absolute and doesn't care how many are in use. prototype-count is the number of \
spare connections it strives to keep over and above the ones that are currently active. Default is 0.

statistics=\
The sample length when taking statistical information, comma-delimited. \
For example: '10s,15m' would mean take samples every 10 seconds and every 15 minutes. Valid units are \
s(econds), m(inutes), h(ours) and d(ays). Default is null (no statistics).

statistics-log-level=\
Whether statistics are logged as they are produced. \
Range: DEBUG, INFO, WARN, ERROR, FATAL. Default is null (no logging).
